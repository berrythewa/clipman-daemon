// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/boltdb.go

// Package storage is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	types "github.com/berrythewa/clipman-daemon/internal/types"
	gomock "github.com/golang/mock/gomock"
)

// MockBoltStorageInterface is a mock of BoltStorageInterface interface.
type MockBoltStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBoltStorageInterfaceMockRecorder
}

// MockBoltStorageInterfaceMockRecorder is the mock recorder for MockBoltStorageInterface.
type MockBoltStorageInterfaceMockRecorder struct {
	mock *MockBoltStorageInterface
}

// NewMockBoltStorageInterface creates a new mock instance.
func NewMockBoltStorageInterface(ctrl *gomock.Controller) *MockBoltStorageInterface {
	mock := &MockBoltStorageInterface{ctrl: ctrl}
	mock.recorder = &MockBoltStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBoltStorageInterface) EXPECT() *MockBoltStorageInterfaceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockBoltStorageInterface) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockBoltStorageInterfaceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBoltStorageInterface)(nil).Close))
}

// GetContentSince mocks base method.
func (m *MockBoltStorageInterface) GetContentSince(since time.Time) ([]*types.ClipboardContent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContentSince", since)
	ret0, _ := ret[0].([]*types.ClipboardContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContentSince indicates an expected call of GetContentSince.
func (mr *MockBoltStorageInterfaceMockRecorder) GetContentSince(since interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContentSince", reflect.TypeOf((*MockBoltStorageInterface)(nil).GetContentSince), since)
}

// GetLatestContent mocks base method.
func (m *MockBoltStorageInterface) GetLatestContent() (*types.ClipboardContent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestContent")
	ret0, _ := ret[0].(*types.ClipboardContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestContent indicates an expected call of GetLatestContent.
func (mr *MockBoltStorageInterfaceMockRecorder) GetLatestContent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestContent", reflect.TypeOf((*MockBoltStorageInterface)(nil).GetLatestContent))
}

// SaveContent mocks base method.
func (m *MockBoltStorageInterface) SaveContent(content *types.ClipboardContent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveContent", content)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveContent indicates an expected call of SaveContent.
func (mr *MockBoltStorageInterfaceMockRecorder) SaveContent(content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveContent", reflect.TypeOf((*MockBoltStorageInterface)(nil).SaveContent), content)
}
